#######################################################################
# Load "Rational SOS" procedures
#######################################################################
restart;
read("rationalSOS.mpl");
with(rationalSOS);

# Display tables of any size
interface(rtablesize=infinity);


#######################################################################
## Example 5.1
## Example in the border with unique solution
#######################################################################

# The 4 even polynomials from Reznick paper
p1 := x*((2-1/2)*x^2-(y^2+z^2+w^2));
p2 := y*((2-1/2)*y^2-(x^2+z^2+w^2));
p3 := z*((2-1/2)*z^2-(x^2+y^2+w^2));
p4 := w*((2-1/2)*w^2-(x^2+y^2+z^2));

# f is the sum of squares of p1, ..., p4
f := p1^2+p2^2+p3^2+p4^2;
f := expand(f);

# We use SEDUMI to compute a SOS decomposition.
# We do not perform facial reduction, since we are interested in the
# solutions of maximum rank. 
out := exactSOS(f, facial = "no"):

# out[3] is a matrix in the spectrahedron of maximum rank.
# We check the eigenvalues to determine the rank
eig(out[3]);

# There are only 4 non-zero eigenvalues, the maximum rank in the
# spectrahedron is 4.

# We compare the matrix obtained by SEDUMI with the matrix corresponding
# to the original decomposition p1^2+p2^2+p3^2+p4^2.
v := convert(out[5], list):  # The monomials indexing the columns of the Gram Matrix
A1 := decompositionToMatrix([p1, p2, p3, p4], v):
A2 := out[3]:
Norm(A1 - A2);

# We see that both matrices are the same. 
# This gives strong numerical evidence that this is the unique matrix 
# in the spectrahedron of f.

#######################################################################
## Proposition 5.2
## Computational proof of the uniquenes of the SOS decomposition
## of Example 5.1
#######################################################################

# Some preparation (computing all monomials of degree 3 and 6 in 4 variables)
polVars := [x,y,z,w]:
d := 3;
varSum := add(polVars[i], i = 1..nops(polVars)):
md := expand((varSum)^d):
cfs := coeffs(md, polVars, 'ct3'):
print("Monomials of degree 3: ", ct3);
m2d := expand(varSum^(2*d)):
cfs := coeffs(m2d, polVars, 'ct6'):
print("Monomials of degree 6: ", ct6);

# We define a generic polynomial of degree d with coefficientes h_i.
hCoeff := [h[1]]:
for i from 2 to nops([ct3]) do
  hCoeff := [op(hCoeff), h[i]]:
end do:
hd := add(hCoeff[i] * ct3[i], i = 1..nops(hCoeff)):
print("Generic polynomial h of degree d: ", hd);

hd_square := expand(hd^2):
aa := getCoeffs(expand(hd_square), [ct6]):

# The 4 even polynomials from Reznick paper
p1 := x*((2-1/2)*x^2-(y^2+z^2+w^2));
p2 := y*((2-1/2)*y^2-(x^2+z^2+w^2));
p3 := z*((2-1/2)*z^2-(x^2+y^2+w^2));
p4 := w*((2-1/2)*w^2-(x^2+y^2+z^2));

# In order to prove that the given decomposition is unique, we need to
# find a PSD form whose kernel is only these 4 polynomials

# We compute all the restrictions to phi: A6 -> R given
# by the four polynomials. There are 20 restrictions for each polynomial

for i from 1 to nops([ct3]) do
  p1t := expand(p1 * ct3[i]);
  vec := LinearAlgebra[Transpose](getCoeffs(p1t, [ct6]));
  if (i=1) then
    M := <vec>;
  else
    M:=<M,vec>;
  end if;
end do:
for i from 1 to nops([ct3]) do
  p2t := expand(p2 * ct3[i]);
  vec := LinearAlgebra[Transpose](getCoeffs(p2t, [ct6]));
  M:=<M,vec>;
end do:
for i from 1 to nops([ct3]) do
  p3t := expand(p3 * ct3[i]);
  vec := LinearAlgebra[Transpose](getCoeffs(p3t, [ct6]));
  M:=<M,vec>;
end do:
for i from 1 to nops([ct3]) do
  p4t := expand(p4 * ct3[i]);
  vec := LinearAlgebra[Transpose](getCoeffs(p4t, [ct6]));
  M:=<M,vec>;
end do:

# We solve the system using only these 80 restriction
B:=Vector(80):
s:=LinearAlgebra[LinearSolve](M,B):
varss:=indets(s);
nops(varss);  # 10 indeterminates left to solve

# This is the expected number of indeterminates.
# The original space has dimension 84, and the restrictions
# 20 + 19 + 18 + 17 = 74 (because pi*pj=pj*pi give the same restriction)

# To construct the desired form we add a new polynomial in the kernel.
# We will find different psd forms and then add them so that
# the kernel is generated by just the 4 polynomials

###############
## p5 := x^3;

M2 := M:
p5x := x^3;
for i from 1 to nops([ct3]) do
  pst := expand(p5x * ct3[i]);
  vec := LinearAlgebra[Transpose](getCoeffs(pst, [ct6]));
  M2:=<M2,vec>;
end do:
B:=Vector(100):
s:=LinearAlgebra[LinearSolve](M2,B):
varss:=indets(s); # 1 -> We got a unique PSD form

# We compute the form and verify it is PSD
s1 := eval(s, {varss[1] = 1}):
ex := LinearAlgebra[Transpose](s1) . aa:
outx := exactSOS(ex, facial = "no"):
eig(outx[3]); # 7 positive eigenvalues and 3 null eigenvalues

# Note that this also prooves that the sum p1^2+p2^2+p3^2+p4^2+p5^2 is
# in the border, because we have a psd form that vanishes in this
# five polynomials and it is not null.

###############
## p5 := y^3;

M2 := M:
p5y := y^3;
for i from 1 to nops([ct3]) do
  pst := expand(p5y * ct3[i]);
  vec := LinearAlgebra[Transpose](getCoeffs(pst, [ct6]));
  M2:=<M2,vec>;
end do:
B:=Vector(100):
s:=LinearAlgebra[LinearSolve](M2,B):
varss:=indets(s); # 1 -> We got a unique PSD form

# We compute the form and verify it is PSD
s1 := eval(s, {varss[1] = 1}):
ey := LinearAlgebra[Transpose](s1) . aa:
outy := exactSOS(ey, facial = "no"):
eig(outy[3]); # 7 positive eigenvalues and 3 null eigenvalues

###############
## p5 := z^3;

M2 := M:
p5z := z^3;
for i from 1 to nops([ct3]) do
  pst := expand(p5z * ct3[i]);
  vec := LinearAlgebra[Transpose](getCoeffs(pst, [ct6]));
  M2:=<M2,vec>;
end do:
B:=Vector(100):
s:=LinearAlgebra[LinearSolve](M2,B):
varss:=indets(s); # 1 -> We got a unique PSD form

# We compute the form and verify it is PSD
s1 := eval(s, {varss[1] = 1}):
ez := LinearAlgebra[Transpose](s1) . aa:
outz := exactSOS(ez, facial = "no"):
eig(outz[3]); # 7 positive eigenvalues and 3 null eigenvalues

###############
## p5 := w^3;

M2 := M:
p5w := w^3;
for i from 1 to nops([ct3]) do
  pst := expand(p5w * ct3[i]);
  vec := LinearAlgebra[Transpose](getCoeffs(pst, [ct6]));
  M2:=<M2,vec>;
end do:
B:=Vector(100):
s:=LinearAlgebra[LinearSolve](M2,B):
varss:=indets(s); # 1 -> We got a unique PSD form

# We compute the form and verify it is PSD
s1 := eval(s, {varss[1] = 1}):
ew := LinearAlgebra[Transpose](s1) . aa:
outw := exactSOS(ew, facial = "no"):
eig(outw[3]); # 7 positive eigenvalues and 3 null eigenvalues

### The desidered form is the sum of all the rank 7 forms:
eall := ex + ey + ez + ew;
outall := exactSOS(eall, facial = "no"):
Eigenvalues(outall[3]);

# [0, 0, 0, 0, 14, 14, 14, 14, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3]
# (we used Eigenvalues to compute the exact values)
# We get a psd form of rank four and p1, p2, p3, p4 are in the kernel
# so this is form we were looking for.


#######################################################################
## Example 5.3
## Sum of 5 squares with unique SOS decomposition.
#######################################################################

p1c := x*((2-1/2)*x^2-(y^2+z^2+w^2));
p2c := y*((2-1/2)*y^2-(x^2+z^2+w^2));
p3c := z*((2-1/2)*z^2-(x^2+y^2+w^2));
p4c := w*((2-1/2)*w^2-(x^2+y^2+z^2));
p5c := w*y*z;
f := p1c^2+p2c^2+p3c^2+p4c^2+p5c^2;
out := exactSOS(f, facial = "no"):
eig(out[3]);

# There are only 5 non-zero eigenvalues, the maximum rank in the
# spectrahedron is 5.

# We compare the matrix obtained by SEDUMI with the matrix corresponding
# to the original decomposition p1c^2+p2c^2+p3c^2+p4c^2+p5c^2.
v := convert(out[5], list):  # The monomials indexing the columns of the Gram Matrix
A1 := decompositionToMatrix([p1c, p2c, p3c, p4c, p5c], v):
A2 := out[3]:
Norm(A1 - A2);

#######################################################################

## Construction of the bilinear form to prove uniqueness of the
## decomposition.

# Some preparation (computing all monomials of degree 3 and 6 in 4 variables)
m3 := expand((x+y+z+w)^3);
cfs := coeffs(m3, [x, y, z, w], 'ct3');
m6 := expand((x+y+z+w)^6);
cfs := coeffs(m6, [x, y, z, w], 'ct6');
psa := a1*w^3 + a2*w^2*x + a3*w^2*y + a4*w^2*z + a5*w*x^2 + a6*w*x*y + a7*w*x*z + a8*w*y^2 + a9*w*y*z + a10*w*z^2 + a11*x^3 + a12*x^2*y + a13*x^2*z + a14*x*y^2 + a15*x*y*z + a16*x*z^2 + a17*y^3 + a18*y^2*z + a19*y*z^2 + a20*z^3;
ps2 := psa*psa;
aa := getCoeffs(expand(ps2), [ct6]):

# The 4 even polynomials from Reznick paper and the fifth polynomial
p1 := x*((2-1/2)*x^2-(y^2+z^2+w^2));
p2 := y*((2-1/2)*y^2-(x^2+z^2+w^2));
p3 := z*((2-1/2)*z^2-(x^2+y^2+w^2));
p4 := w*((2-1/2)*w^2-(x^2+y^2+z^2));
p5 := y*z*w;

# In order to prove that the given decomposition is unique, we need to
# find a PSD form whose kernel consists of only these 5 polynomials

# We compute all the restrictions to phi: A6 -> R given
# by the four polynomials. There are 20 restrictions for each polynomial

for i from 1 to nops([ct3]) do
  p1t := expand(p1 * ct3[i]);
  vec := LinearAlgebra[Transpose](getCoeffs(p1t, [ct6]));
  if (i=1) then
    M := <vec>;
  else
    M:=<M,vec>;
  end if;
end do:
for i from 1 to nops([ct3]) do
  p2t := expand(p2 * ct3[i]);
  vec := LinearAlgebra[Transpose](getCoeffs(p2t, [ct6]));
  M:=<M,vec>;
end do:
for i from 1 to nops([ct3]) do
  p3t := expand(p3 * ct3[i]);
  vec := LinearAlgebra[Transpose](getCoeffs(p3t, [ct6]));
  M:=<M,vec>;
end do:
for i from 1 to nops([ct3]) do
  p4t := expand(p4 * ct3[i]);
  vec := LinearAlgebra[Transpose](getCoeffs(p4t, [ct6]));
  M:=<M,vec>;
end do:
for i from 1 to nops([ct3]) do
  p5t := expand(p5 * ct3[i]);
  vec := LinearAlgebra[Transpose](getCoeffs(p5t, [ct6]));
  M:=<M,vec>;
end do:

# We solve the system using only these 100 restrictions
B:=Vector(100):
s:=LinearAlgebra[LinearSolve](M,B):
varss:=indets(s);
nops(varss);  # 3 indeterminates left to solve

# We need to assign values to these unknowns so that the resulting
# bilinear form is positive semidefinite.
# We try arbitrary values

s1 := eval(s, {varss[1] = 1, varss[2] = 1, varss[3] = 1}):

# We compute the quadratic form
Qform := LinearAlgebra[Transpose](s1) . aa:
# We use exact SOS to compute the associated matrix and we check if it
# is positive semidefinite.
out := exactSOS(Qform, facial = "no"):
eig(out[3]); 

# We get 15 positive eigenvalues and 4 null eigenvalues, but the 
# size of Q should be 20x20, there is one variable that does not 
# show up in Qform.
# If we add this variable, we would get a 20x20 matrix for Q with 5 
# null-eigenvalues. This gives the desired positive semidefinite
# quadratic form whose kernel consists of the 5 polynomials of the 
# original decomposition.

# This implies that there cannot be more that 5 polynomials in the
# decomposition and the decomposition as sum of 5 polynomials is
# unique. This also implies that there cannot be decompositions with
# less than 5 polynomials.


#######################################################################
## Example 5.4
## Sum of 6 squares with unique SOS decomposition.
#######################################################################

p1c := x*((2-1/2)*x^2-(y^2+z^2+w^2));
p2c := y*((2-1/2)*y^2-(x^2+z^2+w^2));
p3c := z*((2-1/2)*z^2-(x^2+y^2+w^2));
p4c := w*((2-1/2)*w^2-(x^2+y^2+z^2));
p5c := x*y*z + x*z*w;
p6c := x^2*y + x*y^2;
f := p1c^2+p2c^2+p3c^2+p4c^2+p5c^2+p6c^2;
out := exactSOS(f, facial = "no"):
eig(out[3]);

# There are only 6 non-zero eigenvalues, the maximum rank in the
# spectrahedron is 6.

# We compare the matrix obtained by SEDUMI with the matrix corresponding
# to the original decomposition p1c^2+p2c^2+p3c^2+p4c^2+p5c^2+p6c^2.
v := convert(out[5], list):  # The monomials indexing the columns of the Gram Matrix
A1 := decompositionToMatrix([p1c, p2c, p3c, p4c, p5c, p6c], v):
A2 := out[3]:
evalf(Norm(A1 - A2));

# We see that both matrices are almost the same. 
# This gives strong numerical evidence that this is the unique matrix 
# in the spectrahedron of f.
