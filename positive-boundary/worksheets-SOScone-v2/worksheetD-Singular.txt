// Singular equations for the triangulated system;
// p1 := a11*f1+a21*f2+a31*f3+a41*f4+a51*m1+a61*m2+a71*m3+a81*m4+a91*m5;
// p2 :=        a22*f2+a32*f3+a42*f4+a52*m1+a62*m2+a72*m3+a82*m4+a92*m5;
// p3 :=               a33*f3+a43*f4+a53*m1+a63*m2+a73*m3+a83*m4+a93*m5;
// p4 :=                      a44*f4+a54*m1+a64*m2+a74*m3+a84*m4+a94*m5;
// p5 :=                             a55*m1+a65*m2+a75*m3+a85*m4+a95*m5;
// p6 :=                                    a66*m2+a76*m3+a86*m4+a96*m5;
;

ring R = 0,  (a11,  a21,  a31,  a41,  a51,  a61,  a71,  a12,  a22,  a32,  a42,  a52,  a62,  a72,  a13,  a23,  a33,  a43,  a53,  a63,  a73,  a14,  a24,  a34,  a44,  a54,  a64,  a74,  a15,  a25,  a35,  a45,  a55,  a65,  a75,  a16,  a26,  a36,  a46,  a56,  a66,  a76,  a77, a81, a82, a83, a84, a85, a86, a87,  a91, a92, a93, a94, a95, a96),  dp;
poly w01 = -a11^2+2*a11*a41-a41^2-a42^2-a43^2-a44^2+2;
poly w02 = 2*a11*a41-2*a41^2-2*a42^2-2*a43^2-2*a44^2+2;
poly w03 = 2*a11*a41-2*a41^2-2*a42^2-2*a43^2-2*a44^2+2;
poly w04 = -2*a11*a41+2*a41^2+2*a42^2+2*a43^2+2*a44^2-2;
poly w05 = -2*a11*a51+2*a41*a51+2*a42*a52+2*a43*a53+2*a44*a54;
poly w06 = -2*a11*a21+2*a21*a41+2*a22*a42-a41^2-a42^2-a43^2-a44^2+1;
poly w07 = 2*a11*a41-4*a41^2-4*a42^2-4*a43^2-4*a44^2+4;
poly w08 = -2*a11*a41+4*a41^2+4*a42^2+4*a43^2+4*a44^2-4;
poly w09 = -2*a11*a61+2*a41*a51+2*a41*a61+2*a42*a52+2*a42*a62+2*a43*a53+2*a43*a63+2*a44*a54+2*a44*a64;
poly w10 = -2*a11*a31+2*a31*a41+2*a32*a42+2*a33*a43-a41^2-a42^2-a43^2-a44^2+1;
poly w11 = -2*a11*a41+4*a41^2+4*a42^2+4*a43^2+4*a44^2-4;
poly w12 = -2*a11*a71+2*a41*a51+2*a41*a71+2*a42*a52+2*a42*a72+2*a43*a53+2*a43*a73+2*a44*a54+2*a44*a74;
poly w13 = 2*a11^2+2*a11*a21+2*a11*a31-2*a11*a41-2*a21*a41-2*a22*a42-2*a31*a41-2*a32*a42-2*a33*a43-a41^2-a42^2-a43^2-a44^2-1;
poly w14 = -2*a11*a81-2*a41*a51+2*a41*a81-2*a42*a52+2*a42*a82-2*a43*a53+2*a43*a83-2*a44*a54+2*a44*a84;
poly w15 = -2*a11*a91+2*a41*a91+2*a42*a92+2*a43*a93+2*a44*a94-a51^2-a52^2-a53^2-a54^2-a55^2+1;
poly w16 = 2*a21*a41+2*a22*a42;
poly w17 = 2*a21*a41+2*a22*a42-2*a41^2-2*a42^2-2*a43^2-2*a44^2+2;
poly w18 = -2*a21*a41-2*a22*a42+2*a41^2+2*a42^2+2*a43^2+2*a44^2-2;
poly w19 = -2*a21*a51-2*a22*a52+2*a41*a61+2*a42*a62+2*a43*a63+2*a44*a64;
poly w20 = 2*a31*a41+2*a32*a42+2*a33*a43-2*a41^2-2*a42^2-2*a43^2-2*a44^2+2;
poly w21 = 6*a41^2+6*a42^2+6*a43^2+6*a44^2-6;
poly w22 = 2*a41*a51+2*a41*a61+2*a41*a71+2*a42*a52+2*a42*a62+2*a42*a72+2*a43*a53+2*a43*a63+2*a43*a73+2*a44*a54+2*a44*a64+2*a44*a74;
poly w23 = -2*a11*a41-2*a21*a41-2*a22*a42-2*a31*a41-2*a32*a42-2*a33*a43-2*a41^2-2*a42^2-2*a43^2-2*a44^2+2;
poly w24 = -2*a41*a51-2*a41*a61+2*a41*a81-2*a42*a52-2*a42*a62+2*a42*a82-2*a43*a53-2*a43*a63+2*a43*a83-2*a44*a54-2*a44*a64+2*a44*a84;
poly w25 = 2*a41*a91+2*a42*a92+2*a43*a93+2*a44*a94-2*a51*a61-2*a52*a62-2*a53*a63-2*a54*a64-2*a55*a65+2;
poly w26 = 2*a31*a41+2*a32*a42+2*a33*a43;
poly w27 = -2*a31*a41-2*a32*a42-2*a33*a43+2*a41^2+2*a42^2+2*a43^2+2*a44^2-2;
poly w28 = -2*a31*a51-2*a32*a52-2*a33*a53+2*a41*a71+2*a42*a72+2*a43*a73+2*a44*a74;
poly w29 = -2*a11*a41-2*a21*a41-2*a22*a42-2*a31*a41-2*a32*a42-2*a33*a43-2*a41^2-2*a42^2-2*a43^2-2*a44^2+2;
poly w30 = -2*a41*a51-2*a41*a71+2*a41*a81-2*a42*a52-2*a42*a72+2*a42*a82-2*a43*a53-2*a43*a73+2*a43*a83-2*a44*a54-2*a44*a74+2*a44*a84;
poly w31 = 2*a41*a91+2*a42*a92+2*a43*a93+2*a44*a94-2*a51*a71-2*a52*a72-2*a53*a73-2*a54*a74-2*a55*a75;
poly w32 = 2*a11*a41+2*a21*a41+2*a22*a42+2*a31*a41+2*a32*a42+2*a33*a43;
poly w33 = 2*a11*a51+2*a21*a51+2*a22*a52+2*a31*a51+2*a32*a52+2*a33*a53-2*a41*a81-2*a42*a82-2*a43*a83-2*a44*a84;
poly w34 = -2*a41*a91-2*a42*a92-2*a43*a93-2*a44*a94-2*a51*a81-2*a52*a82-2*a53*a83-2*a54*a84-2*a55*a85;
poly w35 = -2*a51*a91-2*a52*a92-2*a53*a93-2*a54*a94-2*a55*a95;
poly w36 = -a21^2-a22^2+1;
poly w37 = 2*a21*a41+2*a22*a42;
poly w38 = -2*a21*a41-2*a22*a42;
poly w39 = -2*a21*a61-2*a22*a62;
poly w40 = -2*a21*a31-2*a22*a32-a41^2-a42^2-a43^2-a44^2+1;
poly w41 = -2*a21*a41-2*a22*a42+2*a41^2+2*a42^2+2*a43^2+2*a44^2-2;
poly w42 = -2*a21*a71-2*a22*a72+2*a41*a61+2*a42*a62+2*a43*a63+2*a44*a64;
poly w43 = 2*a11*a21+2*a21^2+2*a21*a31+2*a22^2+2*a22*a32-a41^2-a42^2-a43^2-a44^2-1;
poly w44 = -2*a21*a81-2*a22*a82-2*a41*a61-2*a42*a62-2*a43*a63-2*a44*a64;
poly w45 = -2*a21*a91-2*a22*a92-a61^2-a62^2-a63^2-a64^2-a65^2-a66^2+2;
poly w46 = 2*a31*a41+2*a32*a42+2*a33*a43;
poly w47 = -2*a31*a41-2*a32*a42-2*a33*a43+2*a41^2+2*a42^2+2*a43^2+2*a44^2-2;
poly w48 = -2*a31*a61-2*a32*a62-2*a33*a63+2*a41*a71+2*a42*a72+2*a43*a73+2*a44*a74;
poly w49 = -2*a11*a41-2*a21*a41-2*a22*a42-2*a31*a41-2*a32*a42-2*a33*a43-2*a41^2-2*a42^2-2*a43^2-2*a44^2+2;
poly w50 = -2*a41*a61-2*a41*a71+2*a41*a81-2*a42*a62-2*a42*a72+2*a42*a82-2*a43*a63-2*a43*a73+2*a43*a83-2*a44*a64-2*a44*a74+2*a44*a84;
poly w51 = 2*a41*a91+2*a42*a92+2*a43*a93+2*a44*a94-2*a61*a71-2*a62*a72-2*a63*a73-2*a64*a74-2*a65*a75-2*a66*a76+2;
poly w52 = 2*a11*a41+2*a21*a41+2*a22*a42+2*a31*a41+2*a32*a42+2*a33*a43;
poly w53 = 2*a11*a61+2*a21*a61+2*a22*a62+2*a31*a61+2*a32*a62+2*a33*a63-2*a41*a81-2*a42*a82-2*a43*a83-2*a44*a84;
poly w54 = -2*a41*a91-2*a42*a92-2*a43*a93-2*a44*a94-2*a61*a81-2*a62*a82-2*a63*a83-2*a64*a84-2*a65*a85-2*a66*a86;
poly w55 = -2*a61*a91-2*a62*a92-2*a63*a93-2*a64*a94-2*a65*a95-2*a66*a96;
poly w56 = -a31^2-a32^2-a33^2+1;
poly w57 = -2*a31*a41-2*a32*a42-2*a33*a43;
poly w58 = -2*a31*a71-2*a32*a72-2*a33*a73;
poly w59 = 2*a11*a31+2*a21*a31+2*a22*a32+2*a31^2+2*a32^2+2*a33^2-a41^2-a42^2-a43^2-a44^2-1;
poly w60 = -2*a31*a81-2*a32*a82-2*a33*a83-2*a41*a71-2*a42*a72-2*a43*a73-2*a44*a74;
poly w61 = -2*a31*a91-2*a32*a92-2*a33*a93-a71^2-a72^2-a73^2-a74^2-a75^2-a76^2+1;
poly w62 = 2*a11*a41+2*a21*a41+2*a22*a42+2*a31*a41+2*a32*a42+2*a33*a43;
poly w63 = 2*a11*a71+2*a21*a71+2*a22*a72+2*a31*a71+2*a32*a72+2*a33*a73-2*a41*a81-2*a42*a82-2*a43*a83-2*a44*a84;
poly w64 = -2*a41*a91-2*a42*a92-2*a43*a93-2*a44*a94-2*a71*a81-2*a72*a82-2*a73*a83-2*a74*a84-2*a75*a85-2*a76*a86;
poly w65 = -2*a71*a91-2*a72*a92-2*a73*a93-2*a74*a94-2*a75*a95-2*a76*a96;
poly w66 = -a11^2-2*a11*a21-2*a11*a31-a21^2-2*a21*a31-a22^2-2*a22*a32-a31^2-a32^2-a33^2+3;
poly w67 = 2*a11*a81+2*a21*a81+2*a22*a82+2*a31*a81+2*a32*a82+2*a33*a83;
poly w68 = 2*a11*a91+2*a21*a91+2*a22*a92+2*a31*a91+2*a32*a92+2*a33*a93-a81^2-a82^2-a83^2-a84^2-a85^2-a86^2;
poly w69 = -2*a81*a91-2*a82*a92-2*a83*a93-2*a84*a94-2*a85*a95-2*a86*a96;
poly w70 = -a91^2-a92^2-a93^2-a94^2-a95^2-a96^2+1;

ideal I = w01,  w02,  w03,  w04,  w05,  w06,  w07,  w08,  w09,  w10,  w11,  w12,  w13,  w14,  w15,  w16,  w17,  w18,  w19,  w20,  w21,  w22,  w23,  w24,  w25,  w26,  w27,  w28,  w29,  w30,  w31,  w32,  w33,  w34,  w35,  w36,  w37,  w38,  w39,  w40,  w41,  w42,  w43,  w44,  w45,  w46,  w47,  w48,  w49,  w50,  w51,  w52,  w53,  w54,  w55,  w56,  w57,  w58,  w59,  w60,  w61,  w62,  w63,  w64,  w65,  w66,  w67,  w68,  w69,  w70;

// Quick simplification before computing the Groebner basis.
ideal J = interred(I);

// We assume a11 = a22 = a33 = a44 = 1
ideal J2 = groebner(J);
ideal J3 = J2, a11-1, a22-1, a33-1, a44-1;
J3 = groebner(J3);


// SECOND STEP

// We use lp ordering in this step
ring R2 = 0,  (a11,  a21,  a31,  a41,  a51,  a61,  a71,  a12,  a22,  a32,  a42,  a52,  a62,  a72,  a13,  a23,  a33,  a43,  a53,  a63,  a73,  a14,  a24,  a34,  a44,  a54,  a64,  a74,  a15,  a25,  a35,  a45,  a55,  a65,  a75,  a16,  a26,  a36,  a46,  a56,  a66,  a76,  a77, a81, a82, a83, a84, a85, a86, a87,  a91, a92, a93, a94, a95, a96),  lp;
ideal J3 = fetch(R, J3);

// We use factorizing groebner bases, to get simpler equations
option("redSB"); // We set all the monomials in the GB to be reduced
list l = facstd(J3);

> l;
// [1]:
//    _[1]=a96
//    _[2]=a95
//    _[3]=49*a94^6-28*a94^5+4*a94^3+10*a94^2+2
//    _[4]=2*a93+a94-1
//    _[5]=38*a92-196*a94^5+210*a94^4-105*a94^3-30*a94^2-6*a94+22
//    _[6]=2*a91-a94-1
//    _[7]=19*a86^2-196*a94^5+210*a94^4-105*a94^3-30*a94^2+13*a94-16
//    _[8]=a85^2-a94
//    _[9]=a84
//    _[10]=a83
//    _[11]=a82
//    _[12]=a81
//    _[13]=a76
//    _[14]=38*a66-539*a86*a94^5+112*a86*a94^4+210*a86*a94^3-16*a86*a94^2-140*a86*a94-44*a86
//    _[15]=a75+a85
//    _[16]=2*a65-49*a85*a94^5+28*a85*a94^4-4*a85*a94^2-10*a85*a94+2*a85
//    _[17]=a55+a85
//    _[18]=a74
//    _[19]=a64
//    _[20]=a54
//    _[21]=a44-1
//    _[22]=a73
//    _[23]=a63
//    _[24]=a53
//    _[25]=a43
//    _[26]=a33-1
//    _[27]=a72
//    _[28]=a62
//    _[29]=a52
//    _[30]=a42
//    _[31]=a32
//    _[32]=a22-1
//    _[33]=a71
//    _[34]=a61
//    _[35]=a51
//    _[36]=a41
//    _[37]=a31
//    _[38]=a21
//    _[39]=a11-1
// [2]:
//    _[1]=a96
//    _[2]=a95
//    _[3]=105*a94^8+232*a94^7+28*a94^6-312*a94^5-232*a94^4+104*a94^3+204*a94^2+96*a94+16
//    _[4]=32*a93-3045*a94^7-4208*a94^6+2656*a94^5+6760*a94^4+1132*a94^3-3840*a94^2-2716*a94-584
//    _[5]=2*a92+a94-1
//    _[6]=32*a91+4725*a94^7+6240*a94^6-4240*a94^5-10168*a94^4-1436*a94^3+5808*a94^2+3980*a94+856
//    _[7]=5924*a86^2-51030*a94^7-265842*a94^6-33609*a94^5+369220*a94^4+201484*a94^3-183630*a94^2-179076*a94-44800
//    _[8]=5924*a85^2+673050*a94^7+1018190*a94^6-552867*a94^5-1631032*a94^4-314040*a94^3+912282*a94^2+652996*a94+139584
//    _[9]=a84
//    _[10]=a83
//    _[11]=a82
//    _[12]=a81
//    _[13]=32*a76+1365*a86*a94^7+1966*a86*a94^6-1116*a86*a94^5-3320*a86*a94^4-688*a86*a94^3+1968*a86*a94^2+1340*a86*a94+216*a86
//    _[14]=16*a66-105*a86*a94^7-232*a86*a94^6-28*a86*a94^5+312*a86*a94^4+232*a86*a94^3-104*a86*a94^2-204*a86*a94-80*a86
//    _[15]=a75+a85
//    _[16]=16*a65-105*a85*a94^7-232*a85*a94^6-28*a85*a94^5+312*a85*a94^4+232*a85*a94^3-104*a85*a94^2-204*a85*a94-80*a85
//    _[17]=32*a55-11445*a85*a94^7-15838*a85*a94^6+9428*a85*a94^5+25528*a85*a94^4+4952*a85*a94^3-14208*a85*a94^2-10620*a85*a94-2440*a85
//    _[18]=a74
//    _[19]=a64
//    _[20]=a54
//    _[21]=a44-1
//    _[22]=a73
//    _[23]=a63
//    _[24]=a53
//    _[25]=a43
//    _[26]=a33-1
//    _[27]=a72
//    _[28]=a62
//    _[29]=a52
//    _[30]=a42
//    _[31]=a32
//    _[32]=a22-1
//    _[33]=a71
//    _[34]=a61
//    _[35]=a51
//    _[36]=a41
//    _[37]=a31
//    _[38]=a21
//    _[39]=a11-1
// [3]:
//    _[1]=a96
//    _[2]=a95
//    _[3]=a94
//    _[4]=16*a93^6+8*a93^5-12*a93^4+4*a93^3+4*a93^2-4*a93+1
//    _[5]=a92-8*a93^5-4*a93^4+6*a93^3-a93+1
//    _[6]=a91+8*a93^5+4*a93^4-6*a93^3+2*a93-1
//    _[7]=a86
//    _[8]=a85
//    _[9]=a84
//    _[10]=a83
//    _[11]=a82
//    _[12]=a81
//    _[13]=a76^2+2*a93-1
//    _[14]=a66-32*a76*a93^5-32*a76*a93^4+8*a76*a93^3-4*a76*a93^2-10*a76*a93+3*a76
//    _[15]=a75
//    _[16]=a65^2+48*a93^5+40*a93^4-20*a93^3+4*a93^2+12*a93-7
//    _[17]=a55-16*a65*a93^5-8*a65*a93^4+12*a65*a93^3-4*a65*a93+a65
//    _[18]=a74
//    _[19]=a64
//    _[20]=a54
//    _[21]=a44-1
//    _[22]=a73
//    _[23]=a63
//    _[24]=a53
//    _[25]=a43
//    _[26]=a33-1
//    _[27]=a72
//    _[28]=a62
//    _[29]=a52
//    _[30]=a42
//    _[31]=a32
//    _[32]=a22-1
//    _[33]=a71
//    _[34]=a61
//    _[35]=a51
//    _[36]=a41
//    _[37]=a31
//    _[38]=a21
//    _[39]=a11-1
